// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using uFrame.IOC;
using uFrame.Kernel;
using uFrame.MVVM;


public class MainGameSystemLoaderBase : uFrame.Kernel.SystemLoader {
    
    private MainGameRootController _MainGameRootController;
    
    private PlayerController _PlayerController;
    
    private EnemyController _EnemyController;
    
    [uFrame.IOC.InjectAttribute()]
    public virtual MainGameRootController MainGameRootController {
        get {
            if (_MainGameRootController==null) {
                _MainGameRootController = Container.CreateInstance(typeof(MainGameRootController)) as MainGameRootController;;
            }
            return _MainGameRootController;
        }
        set {
            _MainGameRootController = value;
        }
    }
    
    [uFrame.IOC.InjectAttribute()]
    public virtual PlayerController PlayerController {
        get {
            if (_PlayerController==null) {
                _PlayerController = Container.CreateInstance(typeof(PlayerController)) as PlayerController;;
            }
            return _PlayerController;
        }
        set {
            _PlayerController = value;
        }
    }
    
    [uFrame.IOC.InjectAttribute()]
    public virtual EnemyController EnemyController {
        get {
            if (_EnemyController==null) {
                _EnemyController = Container.CreateInstance(typeof(EnemyController)) as EnemyController;;
            }
            return _EnemyController;
        }
        set {
            _EnemyController = value;
        }
    }
    
    public override void Load() {
        Container.RegisterViewModelManager<MainGameRootViewModel>(new ViewModelManager<MainGameRootViewModel>());
        Container.RegisterController<MainGameRootController>(MainGameRootController);
        Container.RegisterViewModelManager<PlayerViewModel>(new ViewModelManager<PlayerViewModel>());
        Container.RegisterController<PlayerController>(PlayerController);
        Container.RegisterViewModelManager<EnemyViewModel>(new ViewModelManager<EnemyViewModel>());
        Container.RegisterController<EnemyController>(EnemyController);
    }
}
